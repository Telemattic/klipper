# This file contains common pin mappings for the BigTreeTech Octopus
# and Octopus Pro boards. To use this config, start by identifying the
# micro-controller on the board - it may be an STM32F446, STM32F429,
# or an STM32H723.  Select the appropriate micro-controller in "make
# menuconfig" and select "Enable low-level configuration options". For
# STM32F446 boards the firmware should be compiled with a "32KiB
# bootloader" and a "12MHz crystal" clock reference. For STM32F429
# boards use a "32KiB bootloader" and an "8MHz crystal". For STM32H723
# boards use a "128KiB bootloader" and a "25Mhz crystal".

# See docs/Config_Reference.md for a description of parameters.
[force_move]
enable_force_move=True

[output_pin valve]
# Fan5 output
pin: PD15

[output_pin pump]
# HE1 output
pin: PA3

[fan_generic camera_lights]
pin: PA0
# if we want to modulate the LED intensity we'll use hardware PWM at 10KHz
hardware_pwm: True
cycle_time: 0.0001

# Driver0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
microsteps: 16
# 28mm = 14 tooth pulley, GT2 belt
rotation_distance: 28
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 0
position_max: 855
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_x]
uart_pin: PC4
diag_pin: ^PG6
run_current: 0.800
stealthchop_threshold: 999999
# max sensitivity = 144 (160 failed)
# min sensitivity = 32 (16 seemed like it bounced)
driver_SGTHRS: 64

# Driver1
# first Y axis driver, aka "Y1", no endstop (sigh)
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16
# 28mm = 14 tooth pulley, GT2 belt
rotation_distance: 28
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 0
# formerly 1335, I cranked it down to make sure the light bracket
# didn't get smashed into the extrusion
position_max: 1250
homing_speed: 50
homing_retract_dist: 0

[tmc2209 stepper_y]
uart_pin: PD11
diag_pin: ^PG9
run_current: 0.800
stealthchop_threshold: 999999
# max sensitivity = 140 (sometimes fails to move if any higher)
# min sensitivity < 4   (I stopped testing, as it was never bouncing off the stops)
driver_SGTHRS: 50

# Driver2
# second Y axis driver, aka "Y2", includes endstop
[stepper_y1]
step_pin: PF11
# reversed direction pin as these motors face each other
dir_pin: !PG3
enable_pin: !PG5
microsteps: 16
# 28mm = 14 tooth pulley, GT2 belt
rotation_distance: 28
endstop_pin: tmc2209_stepper_y1:virtual_endstop

[tmc2209 stepper_y1]
uart_pin: PC6
diag_pin: ^PG10
run_current: 0.800
stealthchop_threshold: 999999
driver_SGTHRS: 50

# Driver3
[stepper_z]
step_pin: PG4
dir_pin: !PC1
# some documents say this is PA0, that's for pre-1.1 boards
enable_pin: !PA2
microsteps: 16
rotation_distance: 40
endstop_pin: tmc2209_stepper_z:virtual_endstop
position_min: -70
position_max: 0
position_endstop: 0
homing_speed: 40
homing_retract_dist: 0

[tmc2209 stepper_z]
uart_pin: PC7
diag_pin: ^PG11
run_current: 0.650
driver_SGTHRS: 25
stealthchop_threshold: 999999

[manual_stepper stepper_a]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
microsteps: 16
rotation_distance: 200
velocity: 200
accel: 2000

[tmc2209 manual_stepper stepper_a]
uart_pin: PF2
run_current: 0.100
stealthchop_threshold: 999999

# Driver4
#[extruder]
#step_pin: PF9
#dir_pin: PF10
#enable_pin: !PG2
#microsteps: 16
#rotation_distance: 33.500
#nozzle_diameter: 0.400
#filament_diameter: 1.750
#heater_pin: PA0 # HE0
#sensor_pin:  PF4 # T0
#sensor_type: EPCOS 100K B57560G104F
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
#min_temp: 0
#max_temp: 250

#[filament_switch_sensor material_0]
#switch_pin: PG12

# Driver5
#[extruder1]
#step_pin: PC13
#dir_pin: PF0
#enable_pin: !PF1
#heater_pin: PA3 # HE1
#sensor_pin: PF5 # T1
#...

#[filament_switch_sensor material_1]
#switch_pin: PG13

# Driver6
#[extruder2]
#step_pin: PE2
#dir_pin: PE3
#enable_pin: !PD4
#heater_pin: PB0 # HE2
#sensor_pin: PF6 # T2
#...

#[filament_switch_sensor material_2]
#switch_pin: PG14

# Driver7
#[extruder3]
#step_pin: PE6
#dir_pin: PA14
#enable_pin: !PE0
#heater_pin: PB11 # HE3
#sensor_pin: PF7 # T3
#...

#[filament_switch_sensor material_3]
#switch_pin: PG15

#[fan]
#pin: PA8

#[heater_fan fan1]
#pin: PE5

#[heater_fan fan2]
#pin: PD12

#[heater_fan fan3]
#pin: PD13

#[heater_fan fan4]
#pin: PD14

#[controller_fan fan5]
#pin: PD15

[mcu]
serial: /dev/ttyAMA0
restart_method: command

# CAN bus is also available on this board

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 100
max_z_accel: 1000

########################################
# TMC2209 configuration
########################################

#[tmc2209 extruder1]
#uart_pin: PE4
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder2]
#uart_pin: PE1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder3]
#uart_pin: PD3
#run_current: 0.800
#stealthchop_threshold: 999999

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5

# See the sample-lcd.cfg file for definitions of common LCD displays.

# A [probe] section can be defined instead with a pin: setting identical
# to the sensor_pin: for a bltouch
#[bltouch]
#sensor_pin: PB7
#control_pin: PB6
#z_offset: 0

#[neopixel my_neopixel]
#pin: PB10
